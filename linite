#!/usr/bin/env bash

# ============================================================================ #

# Packages #

# Virtual M. and Docker
export list00="qemu-system qemu-utils qemu-user qemu-kvm qemu-guest-agent libvirt-clients libvirt-daemon-system bridge-utils virt-manager ovmf dnsmasq docker.io docker-buildx"

# Essentials [+VM/SoC]
export list01="beep inxi curl nmap parallel smartmontools tmux zip unzip dialog udpcast traceroute arp-scan net-tools netdiscover rdesktop scrcpy speedtest-cli whois btop rsnapshot rclone openssh-server net-tools haveged cifs-utils w3m w3m-img iotop htop lm-sensors samba samba-dsdb-modules samba-vfs-modules sshpass speedtest-cli traceroute docker.io docker-buildx build-essential libatasmart-bin btrfs-progs"

# Server [No VM/SoC]
export list02="$list00 $list01 dialog fail2ban gpm xinit xorg openbox pavucontrol caja epiphany-browser gparted gnome-disk-utility terminator cmatrix"

# ============================================================================ #

# For Ubuntu 22.04 and beyond!
export NEEDRESTART_MODE=a
export DEBIAN_FRONTEND=noninteractive

# Variaveis Globais
export processname=0; export validmail=0; export process=0; export status=0; export pkg=0
export password=0; export password1=0; export password2=0; export password3=0
export report=0

# Server Default
function default0 {
  clear; echo "Instalando pacotes essenciais."
  installer "$list02"

  clear; echo "Validando usuario Administrador para libvirt e docker"
  usermod -aG libvirt administrador
  usermod -aG libvirt-qemu administrador
  usermod -aG docker administrador

  clear; echo "Desativando serviços inuteis."
  systemctl disable NetworkManager-wait-online.service
  systemctl mask NetworkManager-wait-online.service
  systemctl disable systemd-networkd-wait-online.service
  systemctl mask systemd-networkd-wait-online.service

  clear; echo "Pegando a versão mais nova do DW Service"
  dwservice0

  clear; echo "Aplicando recursos extras ao SYSCTL"
  sysctlconf

  clear; echo "Ajustando JOURNAL"
  journaladjust

  clear; echo "Adicionando modelo NETPLAN"
  netplan1

  clear; echo "Criando novos /tmp paths"
  tmpfstab

  clear; echo "Adicionando modelo SAMBA AD"
  smbconfig

  clear; echo "Criando um Beep bonitinho!"
  beep

  clear; echo "Instalação concluida!"

  menuB
}

# ============================================================================ #

function dwservice0 {
  wget https://www.dwservice.net/download/dwagent_generic.sh -O /home/administrador/dwagent_generic.sh
  chmod +x dwagent_generic.sh
}

function sysctlconf {
echo -e "kernel.sysrq=1
vm.panic_on_oom=1
vm.swappiness=10
kernel.panic=5
#net.ipv4.ip_forward=1
#net.ipv6.conf.all.disable_ipv6=1
#net.ipv6.conf.default.disable_ipv6=1" >> /etc/sysctl.conf
}

function journaladjust {
echo "$password" | sudo -S echo -e "Storage=persistent
SystemMaxUse=5G
SystemKeepFree=10G" >> /etc/systemd/journald.conf
}

function tmpfstab {
echo "$password" | sudo -S echo -e "# Temp to ram!
tmpfs /tmp tmpfs defaults 0 0
tmpfs /var/tmp tmpfs defaults 0 0" >> /etc/fstab
}

function netplan1 {
echo -e "
#network:
#    ethernets:
#        renderer: NetworkManager - Use apt install network-manager and delete this comment!
#        enp4s0:
#            addresses: [192.168.250.10/24]
#            gateway4: 192.168.250.1
#            dhcp4: no
##           optional: true
#            nameservers:
#              addresses: [192.168.250.1]
#              #addresses: [200.225.197.34, 200.225.197.37] 
#              #addresses: [200.175.89.139, 200.175.5.139]
#              #addresses: [8.8.4.4, 8.8.8.8]
#              #addresses: [1.1.1.1, 1.0.0.1]
#    version: 2" >> /etc/netplan/00-installer-config.yaml

echo -e "
#network:
#  ethernets:
#    eth0:
#      dhcp4: true
#      optional: true

#    eth1: # THIS!
#      dhcp4: no
#      optional: true
#      addresses: [172.16.1.2/24]
#  version: 2" >> /etc/netplan/00-installer-config.yaml
}

function smbconfig {
mv /etc/samba/smb.conf /etc/samba/smb.BKP
curl -sSL https://raw.githubusercontent.com/urbancompasspony/docker/main/SAMBA_Model/smbAD.conf | sudo tee /etc/samba/smb-AD-Model.conf
}

function beep {
  wget https://raw.githubusercontent.com/urbancompasspony/linux.cheat.sheet/main/beep/beep.sh -O /home/administrador/.beep.sh
  sudo bash /home/administrador/.beep.sh
  echo "@reboot sleep 60; bash /home/administrador/.beep.sh" >> /tmp/crontab_new
  sudo crontab -l | cat - /tmp/crontab_new > crontab.txt && sudo crontab crontab.txt
}

function installer {
  apt install $1 --no-install-recommends -y  
}

# ============================================================================ #

[ "$EUID" -ne 0 ] || {
  echo "Não execute esse script como Root! Ainda. Insira a senha quando solicitado."
  exit
  }

[ -f /home/administrador/.installed ] && {
  clear; echo ""; echo "Sistema já configurado. Saindo..."; echo ""; sleep 3
  exit
} || {
  clear
  clear; echo "Preparando sistema...."; echo ""
  curl -sSL https://raw.githubusercontent.com/urbancompasspony/bashrc/main/install.sh | bash
  . .bashrc
  clear; echo "Removendo pacotes inuteis"; echo ""
  sudo apt purge needrestart cloud-init snapd unattended-upgrades plank deja-dup evolution evolution-data-server bluez blueman bluetooth -y
  clear; echo "Atualizando o sistema"; echo ""
  sudo apt update
  sudo apt upgrade -y
  apt autoremove -y
  touch /home/administrador/.installed
  clear; echo "Concluido!"; echo ""; sleep 3
  default0
}

exit 1
