#!/usr/bin/env bash

# ============================================================================ #

# Packages #

# Virtual M. and Docker
export list00="qemu-system qemu-utils qemu-user qemu-kvm qemu-guest-agent libvirt-clients libvirt-daemon-system bridge-utils virt-manager ovmf dnsmasq docker.io docker-buildx"

# Essentials [+VM/SoC]
export list01="beep inxi curl nmap parallel smartmontools tmux zip unzip dialog udpcast traceroute arp-scan net-tools netdiscover rdesktop scrcpy speedtest-cli whois btop rsnapshot rclone openssh-server net-tools haveged cifs-utils w3m w3m-img iotop htop lm-sensors samba samba-dsdb-modules samba-vfs-modules sshpass speedtest-cli traceroute docker.io docker-buildx build-essential libatasmart-bin btrfs-progs"

# Server [No VM/SoC]
export list02="$list00 $list01 fail2ban gpm xinit xorg openbox pavucontrol caja epiphany-browser gparted gnome-disk-utility terminator cmatrix"

# Desktop
export list03="$list01 shotcut ubuntu-restricted-extras scrcpy adb pavucontrol printer-driver-all rdesktop terminator hardinfo cpu-x qbittorrent dconf-editor filezilla thunderbird thunderbird-locale-pt-br rss-glx xscreensaver xscreensaver-data xscreensaver-data-extra xscreensaver-gl-extra xscreensaver-gl k3b drawing mypaint gimp audacity kodi vlc aisleriot gnome-mines gnome-mahjongg kpat fluidsynth cmatrix"

# WINE
export list04="winehq-staging winetricks libvulkan1:i386 libgl1-mesa-glx:i386 libglu1-mesa:i386 lib32-libxcomposite"

# Raspbian & Tools
export list05="linux-modules-extra-raspi openvpn curl nmap parallel zip unzip dialog udpcast traceroute arp-scan net-tools netdiscover speedtest-cli iotop whois docker.io docker-buildx"

# For ArchLinux:
export listpac="qqc2-desktop-style docker-buildx qemu-base torbrowser-launcher p7zip arch-install-scripts lib32-libxcomposite lib32-pipewire redshift cronie gparted beep dconf-editor inxi curl nmap parallel smartmontools tmux zip unzip dialog traceroute arp-scan net-tools rdesktop scrcpy speedtest-cli whois btop rsnapshot rclone net-tools haveged cifs-utils w3m iotop htop samba sshpass speedtest-cli traceroute docker.io docker-buildx btrfs-progs virt-manager terminator wine openvpn btop scrcpy libatasmart k3b audacity rdesktop qbittorrent dconf-editor filezilla thunderbird libreoffice libreoffice-fresh-pt-br thunderbird-i18n-pt-br nmap drawing kodi vlc kpat gimp fluidsynth cmatrix ettercap-gtk wireshark-qt blender dconf-editor "

export listyay="yaru-colors-gtk-theme yaru-colors-icon-theme yaru-gtk-theme yaru-icon-theme gnome-disk-utility serpro-signer mate-tweak rpi-imager anydesk-bin microsoft-edge-stable-bin google-chrome opera adb"

# qqc2-desktop-style for kdenlive!

# ============================================================================ #

# For Ubuntu 22.04 and beyond!
export NEEDRESTART_MODE=a
export DEBIAN_FRONTEND=noninteractive

# Variaveis Globais
export processname=0; export validmail=0; export process=0; export status=0; export pkg=0
export password=0; export password1=0; export password2=0; export password3=0
export report=0

function menuB {
var0=$(dialog --title 'Linite' --backtitle "L I N I T E" --menu " " 0 0 0 \
1 'Ubuntu Server (>= 22.04)' \
2 'Linux Essentials [All]' \
3 'RaspbberryPi & Tools [SoC Only]' \
4 'Server [No VM nor SoC]' \
5 'Virtual Machine [No VM nor SoC]' \
X '<' 2>&1 > /dev/tty )
case "$var0" in
1) default0 ;;
2) beta  ;;
3) raspbian ;;
4) gamma ;;
5) alpha ;;
X) exit ;;
esac
}

# ============================================================================ #

# Server Default
function default0 {
dialog --title "Menu" --yesno "Deseja mandar ver?" 25 40
[ $? = 0 ] && {
  clear; echo "Instalando pacotes essenciais."
  installer "$list02"

  clear; echo "Validando usuario Administrador para libvirt e docker"
  usermod -aG libvirt administrador
  usermod -aG libvirt-qemu administrador
  usermod -aG docker administrador

  clear; echo "Desativando serviços inuteis."
  servicesoff

  clear; echo "Aplicando recursos extras ao SYSCTL"
  sysctlconf

  clear; echo "Adicionando modelo NETPLAN"
  netplan1

  clear; echo "Adicionando modelo SAMBA AD"
  smbconfig

  clear; echo "Criando um Beep bonitinho!"
  beep

  clear; echo "Instalação concluida!"
  menuB
  }
menuB
}

# Server [No VM/SoC]
function gamma {
dialog --title "Menu" --yesno "Deseja instalar os seguintes pacotes? \n
$list02" 25 40
[ $? = 0 ] && {
  installer "$list02"
  user0
  servicesoff
  sysctlconf
  netplan1
  smbconfig
  beep
  menuB
  }
menuB
}

# Virtual M. and Docker
function alpha {
dialog --title "Menu" --yesno "Deseja instalar os seguintes pacotes? \n
$list00" 25 40
[ $? = 0 ] && {
  installer "$list00"
  user0
  menuB
  }
menuB
}

# Essentials [+VM/SoC]
function beta {
dialog --title "Menu" --yesno "Deseja instalar os seguintes pacotes? \n
$list01" 25 40
[ $? = 0 ] && {
  installer "$list01"
  user0
  servicesoff
  sysctlconf
  journaladjust
  netplan1
  smbconfig
  beep
  menuB
  }
menuB
}

# Desktop
function delta {
dialog --title "Menu" --yesno "Deseja instalar os seguintes pacotes? \n
$list03" 25 40
[ $? = 0 ] && {
  installer "$list03"
  dpkg --add-architecture i386
  user0
  servicesoff
  sysctlconf
  journaladjust
  smbconfig
  ppa1
  tmpfstab
  menuB
}
menuB
}

# WINE
function games {
dialog --title "Menu" --yesno "Deseja instalar os seguintes pacotes? \n
$list04" 25 40
[ $? = 0 ] && {
  perfil
  wineinstall
  installer "$list04"
  menuB
}
menuB
}

# raspbian
function raspbian {
dialog --title "Menu" --yesno "Deseja instalar os seguintes pacotes? \n
$list05" 25 40
[ $? = 0 ] && {
  servicesoff
  sysctlconf
  netplan1
  smbconfig
  installer "$list05"
  menuB
}
menuB
}

# for EndeavourOS 1
function endeavour00 {
  echo "Install with PACMAN: $listpac"
  sleep 15
  echo "Install with YAY: $listyay"
  sleep 10
  echo "ENABLE these services: cronie, sshd"
}

# for EndeavourOS 2
function endeavour01 {
  user0
  perfil
  servicesoff
  sysctlconf
  sysctltweaks
  smbconfig
}

# ============================================================================ #

function installer {
  [ -f /usr/bin/pacman ] && {
    pacman -S $1
  } || {
    apt install $1 --no-install-recommends -y
    }  
}

function user0 {
  VALUE1="administrador"

  VALUE0=$(dialog --ok-label "Definir" --title "Definindo Permissao" --form "Quem vai acessar o LibVirt / Docker?" 0 0 0 \
"Usuario:" 1 1 "$VALUE1" 1 11 30 0 \
3>&1 1>&2 2>&3 3>&- > /dev/tty)

  [ $? -ne 0 ] && exit

  var1=$(echo "$VALUE0" | sed -n 1p)

  usermod -aG libvirt $var1
  usermod -aG libvirt-qemu $var1
  usermod -aG docker $var1
  }

# ============================================================================ #

function ppa1 {
xorg1=$(ls /tmp/.X11-unix | wc -l)

[ "$xorg1" = "0" ] && {
  dialog --title "Erro" --msgbox "XOrg nao encontrado! Abortando..." 6 40
  menuB
  }

dialog --title "Menu" --yesno "Deseja adicionar os repositórios do TVLite e LinuxUprising/Java?" 10 40
[ $? = 0 ] && {
  add-apt-repository ppa:tv-lite/ppa-git
  apt install tv-lite
  add-apt-repository ppa:linuxuprising/java
  }
}

function servicesoff {
systemctl disable NetworkManager-wait-online.service
systemctl mask NetworkManager-wait-online.service
systemctl disable systemd-networkd-wait-online.service
systemctl mask systemd-networkd-wait-online.service
}

function perfil {
dialog --title "Menu" --yesno "Deseja modificar o arquivo .profile?" 10 40
[ $? = 0 ] && {
  echo -e "STAGING_RT_PRIORITY_SERVER=90
STAGING_RT_PRIORITY_BASE=90
WINE_RT=15
WINE_SRV_RT=10
STAGING_WRITECOPY=1
STAGING_SHARED_MEMORY=1
WINE_ENABLE_PIPE_SYNC_FOR_APP=1
export __GL_MaxFramesAllowed=1" >> /home/$USER/.profile
  }
}

function sysctlconf {
echo -e "kernel.sysrq=1
vm.panic_on_oom=1
vm.swappiness=10
kernel.panic=5
#net.ipv4.ip_forward=1
#net.ipv6.conf.all.disable_ipv6=1
#net.ipv6.conf.default.disable_ipv6=1" >> /etc/sysctl.conf
}

function sysctltweaks {
dialog --title "Menu" --yesno "Deseja criar o arquivo gaming.conf?" 10 40
[ $? = 0 ] && {
  echo -e "#    Path                  Mode UID  GID  Age Argument
w /proc/sys/vm/compaction_proactiveness - - - - 0
w /sys/kernel/mm/transparent_hugepage/khugepaged/defrag - - - - 0
#w /sys/kernel/mm/transparent_hugepage/enabled - - - - aways
w /proc/sys/vm/page_lock_unfairness - - - - 1
w /sys/kernel/mm/transparent_hugepage/shmem_enabled - - - - advise
w /proc/sys/vm/swappiness - - - - 1" >> /etc/tmpfiles.d/gaming.conf
  }
}

function journaladjust {
echo "$password" | sudo -S echo -e "Storage=persistent
SystemMaxUse=5G
SystemKeepFree=10G" >> /etc/systemd/journald.conf
}

function tmpfstab {
echo "$password" | sudo -S echo -e "# Temp to ram!
tmpfs /tmp tmpfs defaults 0 0
tmpfs /var/tmp tmpfs defaults 0 0" >> /etc/fstab
}

function netplan1 {
echo -e "
#network:
#    ethernets:
#        renderer: NetworkManager - Use apt install network-manager and delete this comment!
#        enp4s0:
#            addresses: [192.168.250.10/24]
#            gateway4: 192.168.250.1
#            dhcp4: no
##           optional: true
#            nameservers:
#              addresses: [192.168.250.1]
#              #addresses: [200.225.197.34, 200.225.197.37] 
#              #addresses: [200.175.89.139, 200.175.5.139]
#              #addresses: [8.8.4.4, 8.8.8.8]
#              #addresses: [1.1.1.1, 1.0.0.1]
#    version: 2" >> /etc/netplan/00-installer-config.yaml

echo -e "
#network:
#  ethernets:
#    eth0:
#      dhcp4: true
#      optional: true

#    eth1: # THIS!
#      dhcp4: no
#      optional: true
#      addresses: [172.16.1.2/24]
#  version: 2" >> /etc/netplan/00-installer-config.yaml
}

function smbconfig {
mv /etc/samba/smb.conf /etc/samba/smb.BKP

curl -sSL https://raw.githubusercontent.com/urbancompasspony/docker/main/SAMBA_Model/smbAD.conf | sudo tee /etc/samba/smb-AD-Model.conf
}

function wineinstall {
echo "deb https://download.opensuse.org/repositories/Emulators:/Wine:/Debian/xUbuntu_22.04 ./" | sudo tee /etc/apt/sources.list.d/wine-obs.list
wget -qO- https://download.opensuse.org/repositories/Emulators:/Wine:/Debian/xUbuntu_22.04/Release.key | sudo tee /etc/apt/trusted.gpg.d/winehq.asc
apt update
dpkg --add-architecture i386
}

function beep {
  wget https://raw.githubusercontent.com/urbancompasspony/linux.cheat.sheet/main/beep/beep.sh -O /home/administrador/.beep.sh
  sudo bash /home/administrador/.beep.sh
  echo "@reboot sleep 60; bash /home/administrador/.beep.sh" >> /tmp/crontab_new
  sudo crontab -l | cat - /tmp/crontab_new > crontab.txt && sudo crontab crontab.txt
}

function flatpakhub {
  sudo apt install flatpak
  flatpak remote-add --if-not-exists flathub https://flathub.org/repo/flathub.flatpakrepo
  menuB
}

# ============================================================================ #

function start-arch {
timedatectl set-timezone America/Bahia
menuB
}

# ============================================================================ #

[ "$EUID" -ne 0 ] && {
  echo "Execute esse script como Root!"
  exit
  }

[ -f /home/$USER/.installed ] && {
  clear
  echo ""
  echo "Sistema já Instalado."
  menuB
} || {
  clear
  clear; echo "Sistema não configurado. Configurando..."; echo ""
  sudo apt update
  clear; echo "Instalando pacotes essenciais"; echo ""
  sudo apt install dialog curl
  curl -sSL https://raw.githubusercontent.com/urbancompasspony/bashrc/main/install.sh | bash
  . .bashrc
  clear; echo "Removendo pacotes inuteis"; echo ""
  sudo apt purge needrestart cloud-init snapd unattended-upgrades plank deja-dup evolution evolution-data-server bluez blueman bluetooth -y
  clear; echo "Atualizando o sistema"; echo ""
  sudo apt upgrade -y
  apt autoremove -y
  clear; echo "Definindo timezone"; echo ""
  timedatectl set-timezone America/Bahia
  touch /home/$USER/.installed
  clear; echo "Concluido!"; echo ""; sleep 3
  menuB
}
