#!/usr/bin/env bash

# ======================================================================================================================================================== #
# curl -L desk.linuxuniverse.com.br | bash
# ======================================================================================================================================================== #

export list01="build-essential wine-stable \
cabextract chromium-codecs-ffmpeg-extra fonts-liberation gstreamer1.0-libav gstreamer1.0-plugins-ugly gstreamer1.0-vaapi liba52-0.7.4 libaribb24-0 libavcodec-extra \
net-tools netdiscover iperf arp-scan traceroute speedtest-cli whois openvpn curl \
gparted gnome-disk-utility vlc kolourpaint \
cifs-utils samba smbclient liblchown-perl p7zip unrar lz4 rclone rsnapshot iotop \
printer-driver-escpr hplip printer-driver-all \
stress lm-sensors cmatrix btop inxi tree dialog btrfs-progs filelight \
libssl3 pcscd opensc \
xrdp xorgxrdp freerdp2-x11 openssh-server \
adsys adsys-windows sssd-ad sssd-tools realmd adcli smb4k \
docker.io qemu-system qemu-utils qemu-user qemu-kvm qemu-guest-agent libvirt-clients libvirt-daemon-system bridge-utils virt-manager ovmf dnsmasq genisoimage guestfs-tools"

# ======================================================================================================================================================== #

function root_check0 {
  [ "$EUID" -ne 0 ] || {
    clear
    echo "Não execute este script como Root! DICA: Remova o SUDO do comando ou execute-o como usuario local."; echo ""
    exit
  }
}

function welcome0 {
  clear; echo ""; echo "Preparo do Kubuntu 24.04 LTS by SuitIT®"; echo ""
  echo "Insira a senha do usuário $USER"; echo ""
  sudo echo . >/dev/null
  echo ""; echo "5"; sleep 1; echo "4"; sleep 1; echo "3"; sleep 1; echo "2"; sleep 1; echo "1"; sleep 1
}

function bashconf0 {
  clear; echo "Configurando BASH"; echo ""
  curl -sSL https://raw.githubusercontent.com/urbancompasspony/bashrc/main/install.sh | bash
}

function timezone0 {
  sudo timedatectl set-timezone Etc/GMT+3
  sudo timedatectl set-local-rtc 1
}

function useless0 {
  clear; echo "Removendo pacotes e desativando servicos inuteis"; echo ""
  sudo apt purge unattended-upgrades plasma-discover-backend-snap -y
  sudo systemctl disable systemd-networkd-wait-online.service
  sudo systemctl mask systemd-networkd-wait-online.service
}

function update0 {
    clear; echo "Atualizando o sistema"; echo ""
    sudo apt update; sudo apt upgrade -y; sudo apt autoremove -y; clear

    cat <<EOF | sudo tee /etc/apt/preferences.d/nosnap.pref
# To prevent repository packages from triggering the installation of Snap,
# this file forbids snapd from being installed by APT.
# For more information: https://linuxmint-user-guide.readthedocs.io/en/latest/snap.html
Package: snapd
Pin: release a=*
Pin-Priority: -10
EOF

    sudo apt-mark hold snapd

    echo "Instalando pacotes..."
    sudo apt install $list01 -y
    sync &&

    sudo -E usermod -aG docker "$USER"
}

function sysctl0 {
  [ -f /etc/.sysctlok ] || {
    sleep 3; clear; echo "Aplicando recursos extras ao SYSCTL"
    echo -e "kernel.sysrq=1
vm.panic_on_oom=1
vm.swappiness=10
kernel.panic=5
#net.ipv4.ip_forward=1
#net.ipv6.conf.all.disable_ipv6=1
#net.ipv6.conf.default.disable_ipv6=1" | sudo tee -a /etc/sysctl.conf

    sudo touch /etc/.sysctlok
} && {
    echo . >/dev/null
  }
}

function fstab0 {
  [ -f /etc/.fstabok ] || {
echo -e "
# Temp to ram!
tmpfs /tmp tmpfs defaults 0 0
tmpfs /var/tmp tmpfs defaults 0 0" | sudo tee -a /etc/fstab

    sudo touch /etc/.fstabok
  } && {
    echo . >/dev/null
  }
}

function flatpak0 {
  sudo apt install flatpak plasma-discover-backend-flatpak -y &&
  sudo flatpak remote-add --if-not-exists flathub https://dl.flathub.org/repo/flathub.flatpakrepo
}

function appsflat0 {
  sudo flatpak install com.anydesk.Anydesk us.zoom.Zoom com.thincast.client org.remmina.Remmina com.usebottles.bottles org.mozilla.Thunderbird com.ktechpit.whatsie \
  com.github.tchx84.Flatseal net.codelogistics.webapps com.skype.Client -y

#not used:  org.onlyoffice.desktopeditors
}

function browsers0 {
  [ -f /etc/.browserok ] || {
    # Google Chrome
    wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb
    sudo dpkg -i ./google-chrome*.deb; sudo rm google-chrome*.deb

    # Microsoft Edge
    wget https://packages.microsoft.com/repos/edge/pool/main/m/microsoft-edge-stable/microsoft-edge-stable_135.0.3179.54-1_amd64.deb
    sudo dpkg -i microsoft-edge-stable_135.0.3179.54-1_amd64.deb; sudo rm microsoft-edge*.deb

    # Firefox
    sudo install -d -m 0755 /etc/apt/keyrings &&
    wget -q https://packages.mozilla.org/apt/repo-signing-key.gpg -O- | sudo tee /etc/apt/keyrings/packages.mozilla.org.asc > /dev/null &&
    gpg -n -q --import --import-options import-show /etc/apt/keyrings/packages.mozilla.org.asc | awk '/pub/{getline; gsub(/^ +| +$/,""); if($0 == "35BAA0B33E9EB396F59CA838C0BA5CE6DC6315A3") print "\nThe key fingerprint matches ("$0").\n"; else print "\nVerification failed: the fingerprint ("$0") does not match the expected one.\n"}' &&
    echo "deb [signed-by=/etc/apt/keyrings/packages.mozilla.org.asc] https://packages.mozilla.org/apt mozilla main" | sudo tee -a /etc/apt/sources.list.d/mozilla.list > /dev/null &&

  echo '
Package: *
Pin: origin packages.mozilla.org
Pin-Priority: 1000
' | sudo tee /etc/apt/preferences.d/mozilla &&

    sudo apt update; sudo apt install firefox -y

    sudo touch /etc/.browserok
  } && {
    echo . >/dev/null
  }
}

function token0 {
  [ -f /etc/.tokenok ] || {
    wget http://archive.ubuntu.com/ubuntu/pool/main/o/openssl/libssl1.1_1.1.1-1ubuntu2.1~18.04.23_amd64.deb
    sudo dpkg -i libssl1.1_1.1.1-1ubuntu2.1~18.04.23_amd64.deb; sudo rm libssl1*.deb

    wget http://archive.ubuntu.com/ubuntu/pool/main/g/gdk-pixbuf-xlib/libgdk-pixbuf-xlib-2.0-0_2.40.2-2build4_amd64.deb
    sudo dpkg -i libgdk-pixbuf-xlib-2.0-0_2.40.2-2build4_amd64.deb; sudo rm libgdk*.deb

    wget http://archive.ubuntu.com/ubuntu/pool/universe/g/gdk-pixbuf-xlib/libgdk-pixbuf2.0-0_2.40.2-2build4_amd64.deb
    sudo dpkg -i libgdk-pixbuf2.0-0_2.40.2-2build4_amd64.deb; sudo rm libgdk*.deb

    sudo apt upgrade -y
 
    cd /tmp; wget https://www.globalsign.com/en/safenet-drivers/USB/10.7/Safenet_Linux_Installer_DEB_x64.zip
    unzip Safenet_Linux_Installer_DEB_x64.zip
    sudo dpkg -i safenetauthenticationclient_10.7.77_amd64.deb

    sudo apt -y install libnss3-tools

    rm -fr ~/.pki/nssdb; mkdir -p ~/.pki/nssdb; certutil -d ~/.pki/nssdb -N

    cd ~; modutil -dbdir sql:.pki/nssdb/ -add "Safenet 5110" -libfile "/usr/lib/libeToken.so"

    sudo touch /etc/.tokenok
  } && {
    echo . >/dev/null
  }
}

function dwservice0 {
  [ -f /home/administrador/dwagent_x86.sh ] || {
    wget https://www.dwservice.net/download/dwagent_x86.sh -O /home/administrador/dwagent_x86.sh
    chmod +x dwagent_x86.sh
  } && {
    echo . >/dev/null
  }
}

function ADDCJoin0 {
  sudo pam-auth-update --enable mkhomedir
}

function onlyoffice0 {
  [ -f /etc/.officeok ] || {
    mkdir -p 700 ~/.gnupg
    gpg --no-default-keyring --keyring gnupg-ring:/tmp/onlyoffice.gpg --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys CB2DE8E5
    chmod 644 /tmp/onlyoffice.gpg; sudo chown root:root /tmp/onlyoffice.gpg; sudo mv /tmp/onlyoffice.gpg /usr/share/keyrings/onlyoffice.gpg

    echo 'deb [signed-by=/usr/share/keyrings/onlyoffice.gpg] https://download.onlyoffice.com/repo/debian squeeze main' | sudo tee -a /etc/apt/sources.list.d/onlyoffice.list

    sudo apt update; sudo apt install onlyoffice-desktopeditors -y

    sudo touch /etc/.officeok
  } && {
    echo . >/dev/null
  }
}

# ======================================================================================================================================================== #

root_check0
welcome0
bashconf0
timezone0
useless0
update0
sysctl0
fstab0
flatpak0
browsers0
appsflat0
token0
dwservice0
ADDCJoin0
onlyoffice0

clear; echo ""; echo "O SISTEMA VAI REINICIAR AGORA. Ao voltar, execute este comando e aceite os termos de uso:"
echo ""
echo "sudo apt install ttf-mscorefonts-installer -y"
echo ""
echo "para ter as Fontes da Microsoft como Arial, Times New Roman e outras."
echo ""; echo "5"; sleep 1; echo "4"; sleep 1; echo "3"; sleep 1; echo "2"; sleep 1; echo "1"; sleep 1

clear
echo ""; echo "O sistema será reiniciado agora!"
sleep 2

sudo reboot
exit 1
